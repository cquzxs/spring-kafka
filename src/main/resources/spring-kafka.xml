<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.zxs.ssh.template.service"/>

    <bean id="producerProperties" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="bootstrap.servers" value="${producer.bootstrap.servers}"/>
                <entry key="acks" value="${producer.acks}"/>
                <entry key="retries" value="${producer.retries}"/>
                <entry key="batch.size" value="${producer.batch.size}"/>
                <entry key="linger.ms" value="${producer.linger.ms}"/>
                <entry key="buffer.memory" value="${producer.buffer.memory}"/>
                <entry key="key.serializer" value="${producer.key.serializer}"/>
                <entry key="value.serializer" value="${producer.value.serializer}"/>
            </map>
        </constructor-arg>
    </bean>

    <bean id="consumerProperties" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="bootstrap.servers" value="${consumer.bootstrap.servers}"/>
                <entry key="group.id" value="${consumer.group.id}"/>
                <entry key="auto.offset.reset" value="${consumer.auto.offset.reset}"/>
                <entry key="enable.auto.commit" value="${consumer.enable.auto.commit}"/>
                <entry key="auto.commit.interval.ms" value="${consumer.auto.commit.interval.ms}"/>
                <entry key="session.timeout.ms" value="${consumer.session.timeout.ms}"/>
                <entry key="key.deserializer" value="${consumer.key.deserializer}"/>
                <entry key="value.deserializer" value="${consumer.value.deserializer}"/>
            </map>
        </constructor-arg>
    </bean>

    <bean id="producerFactory"
          class="org.springframework.kafka.core.DefaultKafkaProducerFactory">
        <constructor-arg ref="producerProperties"/>
    </bean>

    <bean id="consumerFactory"
          class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
        <constructor-arg ref="consumerProperties"/>
    </bean>

    <bean id="containerProperties"
          class="org.springframework.kafka.listener.config.ContainerProperties">
        <constructor-arg value="${consumer.topic}"/>
        <property name="messageListener" ref="kafkaConsumerServer"/>
    </bean>

    <bean id="messageListenerContainerTrade"
          class="org.springframework.kafka.listener.KafkaMessageListenerContainer"
          init-method="doStart">
        <constructor-arg ref="consumerFactory"/>
        <constructor-arg ref="containerProperties"/>
    </bean>

    <bean id="kafkaTemplate"
          class="org.springframework.kafka.core.KafkaTemplate">
        <constructor-arg ref="producerFactory"/>
        <constructor-arg name="autoFlush" value="true"/>
        <property name="defaultTopic" value="${producer.topic}"/>
        <!--<property name="producerListener" ref="producerListener"/>-->
    </bean>
</beans>